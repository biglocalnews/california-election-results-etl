name: "Extract, transform and load"

on:
  workflow_dispatch:

permissions: write-all

concurrency:
  group: "etl"
  cancel-in-progress: true

jobs:
  los_angeles_county:
    name: Los Angeles County Registrar-Recorder/County Clerk
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - id: install
        name: Install Python dependencies
        uses: ./.github/actions/install

      - id: download
        name: Download
        run: pipenv run python -m src.los_angeles_county.download
        shell: bash

      - id: transform
        name: Transform
        run: pipenv run python -m src.los_angeles_county.transform
        shell: bash

      - id: commit
        name: Commit
        uses: ./.github/actions/commit
        with:
          message: "Fetched latest from the Los Angeles County Registrar-Recorder/County Clerk"

  ca_secretary_of_state:
    name: California Secretary of State
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - id: install
        name: Install Python dependencies
        uses: ./.github/actions/install

      - id: download
        name: Download
        run: pipenv run python -m src.ca_secretary_of_state.download
        shell: bash

      - id: transform
        name: Transform
        run: pipenv run python -m src.ca_secretary_of_state.transform
        shell: bash

      - id: commit
        name: Commit
        uses: ./.github/actions/commit
        with:
          message: "Fetched latest from the California Secretary of State"

  export:
    name: Export CSV
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [los_angeles_county, ca_secretary_of_state]
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - id: install
        name: Install Python dependencies
        uses: ./.github/actions/install

      - id: export
        name: Export to S3
        run: pipenv run python -m src.export
        shell: bash

      - id: commit
        name: Commit
        uses: ./.github/actions/commit
        with:
          message: "Exported CSV"

  kpcc:
    name: Deploy for KPCC
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [los_angeles_county, ca_secretary_of_state]
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - id: install
        name: Install Python dependencies
        uses: ./.github/actions/install

      - id: optimize-kpcc
        name: Optimize for KPCC
        run: pipenv run python -m src.optimize kpcc
        shell: bash

      - id: commit
        name: Commit
        uses: ./.github/actions/commit
        with:
          message: "Optimized JSON"

      - id: upload
        name: Upload to S3
        run: pipenv run python -m src.upload kpcc
        shell: bash
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_PATH_PREFIX: ${{ secrets.AWS_PATH_PREFIX }}

      - id: install-aws-cli
        name: Install AWS cli
        run: pipenv install awscli --skip-lock
        shell: bash

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

      - id: invalidate
        name: Invalidate Cloudfront cache
        run: pipenv run aws cloudfront create-invalidation --distribution-id ${{ secrets.KPCC_AWS_DISTRIBUTION_ID }} --paths "/${{ secrets.AWS_PATH_PREFIX }}*"
        shell: bash

  pages:
    name: Deploy to GitHub Pages
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [export]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3

      - id: install
        name: Install Python dependencies
        uses: ./.github/actions/install

      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './data'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
